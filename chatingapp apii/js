// chat-app-lib.js

const axios = require('axios');

class ChatAppLib {
  constructor(apiBaseUrl, apiKey) {
    this.apiBaseUrl = apiBaseUrl;
    this.apiKey = apiKey;
  }

  async authenticateUser(username, password) {
    try {
      const response = await axios.post(
        `${this.apiBaseUrl}/auth`,
        { username, password },
        {
          headers: {
            Authorization: `Bearer ${this.apiKey}`,
            'Content-Type': 'application/json',
          },
        }
      );

      return response.data.token;
    } catch (error) {
      throw new Error(`Authentication failed: ${error.message}`);
    }
  }

  async sendMessage(token, recipient, message) {
    try {
      const response = await axios.post(
        `${this.apiBaseUrl}/messages`,
        { recipient, message },
        {
          headers: {
            Authorization: `Bearer ${token}`,
            'Content-Type': 'application/json',
          },
        }
      );

      return response.data.sent;
    } catch (error) {
      throw new Error(`Error sending message: ${error.message}`);
    }
  }

  async getMessages(token) {
    try {
      const response = await axios.get(`${this.apiBaseUrl}/messages`, {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });

      return response.data.messages;
    } catch (error) {
      throw new Error(`Error retrieving messages: ${error.message}`);
    }
  }

  // Add more methods for handling different chat functionalities,
  // such as creating chat rooms, retrieving user lists, etc.
}

module.exports = ChatAppLib;
// example-usage.js

const ChatAppLib = require('./chat-app-lib');

const apiBaseUrl = 'https://api.example.com/chat';
const apiKey = 'your-api-key';

const chatApp = new ChatAppLib(apiBaseUrl, apiKey);

(async () => {
  try {
    const username = 'john_doe';
    const password = 'secure_password';
    const authToken = await chatApp.authenticateUser(username, password);

    const recipient = 'jane_doe';
    const message = 'Hello, how are you?';
    const sent = await chatApp.sendMessage(authToken, recipient, message);

    if (sent) {
      const messages = await chatApp.getMessages(authToken);
      console.log('Received messages:', messages);
    } else {
      console.log('Message not sent.');
    }

    // Add more chat app calls as needed
  } catch (error) {
    console.error('An error occurred:', error.message);
  }
})();
